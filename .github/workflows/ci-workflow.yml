name: Run tests and report coverage

on:
  push:
    branches:
      - staging
  pull_request:
    # Intentionally blank; no config

jobs:
  build-and-test-backend:
    name: Build and test Python app
    runs-on: ubuntu-latest
    container: python:3.6.12
    env:
      PIPENV_VENV_IN_PROJECT: true
    steps:
      - uses: actions/checkout@v2

      - name: Install Pipenv dependencies
        run: |
          pip install pipenv
          pipenv install --dev

      - name: Install Code Climate test reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter

      - name: Run tests
        run: |
          ./cc-test-reporter before-build
          pipenv run coverage run -m pytest -vv tests
          pipenv run coverage xml
          ./cc-test-reporter format-coverage --output /tmp/codeclimate_backend_coverage.json

      - name: Store Backend Coverage Results
        uses: actions/upload-artifact@v2
        with:
          name: codeclimate_frontend_coverage
          path: /tmp/codeclimate_backend_coverage.json

  build-and-test-frontend:
    name: Build and test JavaScript components
    runs-on: ubuntu-latest
    container: node:12.18.3
    steps:
      - name: Install latest Git
        run: |
          apt-get update
          apt-get install libz-dev libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext cmake gcc -y
          mkdir tmp
          cd /tmp
          curl -o git.tar.gz https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.26.2.tar.gz
          tar -zxf git.tar.gz
          cd git-*
          make prefix=/usr/local all
          make prefix=/usr/local install
          exec bash
          git --version

      - uses: actions/checkout@v2

      - name: Install Yarn dependencies
        run: yarn install --dev

      # Workaround for Git < 2.18, since actions/checkout won't clone the repo with Git and cc-test-reporter needs that info.
      # - name: Set ENV for codeclimate (pull_request)
      #   if: github.event_name == 'pull_request'
      #   run: |
      #     git fetch --no-tags --prune --depth=1 origin +refs/heads/$GITHUB_HEAD_REF:refs/remotes/origin/$GITHUB_HEAD_REF
      #     echo "::set-env name=GIT_BRANCH::$GITHUB_HEAD_REF"
      #     echo "::set-env name=GIT_COMMIT_SHA::$(git rev-parse origin/$GITHUB_HEAD_REF)"

      # Workaround for Git < 2.18, since actions/checkout won't clone the repo with Git and cc-test-reporter needs that info.
      # - name: Set ENV for codeclimate (push)
      #   if: github.event_name == 'push'
      #   run: |
      #     echo "::set-env name=GIT_BRANCH::$GITHUB_REF"
      #     echo "::set-env name=GIT_COMMIT_SHA::$GITHUB_SHA"

      - name: Install Code Climate test reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter

      - name: Run tests
        run: |
          ./cc-test-reporter before-build
          yarn test --coverage
          ./cc-test-reporter format-coverage --debug --output /tmp/codeclimate_frontend_coverage.json

      - name: Store Frontend Coverage Results
        uses: actions/upload-artifact@v2
        with:
          name: codeclimate_frontend_coverage
          path: /tmp/codeclimate_frontend_coverage.json

  aggregate-and-report-coverage:
    name: Aggregate and upload coverage reports
    runs-on: ubuntu-latest
    needs: [build-and-test-backend, build-and-test-frontend]
    steps:
      - name: Download Coverage Result Artifacts
        uses: actions/download-artifact@v2
        with:
          path: /tmp

      - name: Install Code Climate test reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter

      - name: Sum coverage
        run: ./cc-test-reporter sum-coverage --parts 2 /tmp/codeclimate_frontend_coverage/codeclimate_frontend_coverage.json /tmp/codeclimate_frontend_coverage/codeclimate_frontend_coverage.json

      - name: Upload coverage
        run: ./cc-test-reporter upload-coverage
